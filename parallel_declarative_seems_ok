pipeline {
    
    agent {
        node {
            label 'ubuntu-build'
            }   // end of node
    }    // end of agent     
    
    stages {
            stage ('Checkout') {
                steps {
                    git 'https://github.com/yackey/AEF-CI.git'
                    stash name: 'everything', 
                        excludes: 'test-results/**', 
                        includes: '**'
                }   // end of steps
            }   // end of checkout stage  

// zzzzzzzzzz

            stage ('Parallel ARM Build') {
                parallel {

                    stage ('Release ARM Build') {

                        agent {
                            node {
                                label 'ubuntu-build'
                                }   // end of node
                        }    // end of agent

                        steps {
                            dir ("build") {
                                Build_ARM_Release()
                            }   // end of dir
                        }   // end of steps
                    }   // end of Release ARM Build stage

                    stage ('Debug ARM Build') {

                        agent {
                            node {
                                label 'ubuntu-build'
                                }   // end of node
                        }    // end of agent

                        steps {
                            dir ("build") {
                                Build_ARM_Debug()
                            }   // end of dir
                        }   // end of steps
                    }   // end of Debug ARM Build stage


                }   //end of parallel
            }


// zzzzzzzzzz

            stage ('Parallel Simulator Build') {
                parallel {

                    stage ('Release Simulator Build') {

                        agent {
                            node {
                                label 'ubuntu-build'
                                }   // end of node
                        }    // end of agent

                        steps {
                            dir ("build") {
                                Build_x86_64_Release()
                            }   // end of dir
                        }   // end of steps
                    }   // end of Release Simulator Build stage

                    stage ('Debug Simulator Build') {

                        agent {
                            node {
                                label 'ubuntu-build'
                                }   // end of node
                        }    // end of agent

                        steps {
                            dir ("build") {
                                Build_x86_64_Debug()
                            }   // end of dir
                        }   // end of steps
                    }   // end of Debug Simulator Build stage


                }   //end of parallel
            }

    }   // end of stages        
}

def Build_x86_64_Release() {
    //dir ("build") {
        sh 'rm -rf *'
        unstash 'everything'
        sh 'ls'
        sh 'conan install ../test -s os=Linux -s arch=x86_64 -s compiler=gcc -s compiler.version=6.4 -s build_type=Release'
        sh 'cmake -G "Unix Makefiles" -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_TOOLCHAIN_FILE=../Toolchain-GCC-x86_64.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TARGET_PROCESSOR=x86_64 ..'
        sh 'cmake --build .'
        //
        sh 'rm ./conan*.*'
        sh 'conan export-pkg .. AEFLib/1.0@yackey/stable -s os=Linux -s arch=x86_64 -s compiler=gcc -s compiler.version=6.4 -s build_type=Release -f'
    //}
}

def Build_x86_64_Debug() {
    //dir ("build") {
        sh 'rm -rf *'
        unstash 'everything'
        sh 'ls'
        sh 'conan install ../test -s os=Linux -s arch=x86_64 -s compiler=gcc -s compiler.version=6.4 -s build_type=Debug'
        sh 'cmake -G "Unix Makefiles" -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_TOOLCHAIN_FILE=../Toolchain-GCC-x86_64.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TARGET_PROCESSOR=x86_64 ..'
        sh 'cmake --build .'
        //
        sh 'rm ./conan*.*'
        sh 'conan export-pkg .. AEFLib/1.0@yackey/stable -s os=Linux -s arch=x86_64 -s compiler=gcc -s compiler.version=6.4 -s build_type=Debug -f'
    //}
}

def Build_ARM_Release() {
        sh 'rm -rf *'
        unstash 'everything'
        sh 'ls'
        sh 'conan install ../test -s os=Linux -s arch=armv7 -s compiler=gcc -s compiler.version=6.4 -s build_type=Release'
        sh 'cmake -G "Unix Makefiles" -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_TOOLCHAIN_FILE=../Toolchain-GCC-ARM.cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TARGET_PROCESSOR=ARM ..'
        sh 'cmake --build .'
        //
        sh 'rm ./conan*.*'
        sh 'conan export-pkg .. AEFLib/1.0@yackey/stable -s os=Linux -s arch=armv7 -s compiler=gcc -s compiler.version=6.4 -s build_type=Release -f'
}

def Build_ARM_Debug() {
        sh 'rm -rf *'
        unstash 'everything'
        sh 'ls'
        sh 'conan install ../test -s os=Linux -s arch=armv7 -s compiler=gcc -s compiler.version=6.4 -s build_type=Debug'
        sh 'cmake -G "Unix Makefiles" -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_TOOLCHAIN_FILE=../Toolchain-GCC-ARM.cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_TARGET_PROCESSOR=ARM ..'
        sh 'cmake --build .'
        //
        sh 'rm ./conan*.*'
        sh 'conan export-pkg .. AEFLib/1.0@yackey/stable -s os=Linux -s arch=armv7 -s compiler=gcc -s compiler.version=6.4 -s build_type=Debug -f'
}
